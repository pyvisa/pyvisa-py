# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - main
      - staging
      - trying

pr:
  - main

variables:
  PYVISA_KEYSIGHT_VIRTUAL_INSTR: 1

pool:
  name: Keysight-based
  demands: KEYSIGHT -equals TCPIP

steps:
  - script: |
      export PATH="$HOME/miniconda3/bin:$PATH"
      echo Create environment
      conda create -n test_ python=3.9 numpy --yes
    displayName: "Create environment"

  - script: |
      export PATH="$HOME/miniconda3/bin:$PATH"
      source $HOME/miniconda3/bin/activate
      echo Activate environment
      call conda activate test_
      echo Install project and required dependencies
      pip install git+https://github.com/pyvisa/pyvisa.git#egg=pyvisa
      pip install -e .[serial]
      
    displayName: "Install dependencies"

  - script: |
      export PATH="$HOME/miniconda3/bin:$PATH"
      source $HOME/miniconda3/bin/activate
      echo Activate environment
      call conda activate test_
      echo Install pytest and co
      pip install pytest pytest-azurepipelines pytest-cov
      echo Run pytest
      python -X dev -m pytest --pyargs pyvisa_py --cov pyvisa_py --cov-report xml -v
    displayName: "Run tests"

  - script: |
      export PATH="$HOME/miniconda3/bin:$PATH"
      source $HOME/miniconda3/bin/activate
      echo Activate environment
      call conda activate test_
      echo Install codecov
      pip install codecov
      echo Run codecov
      codecov --file coverage.xml --token $(CODECOV_TOKEN) --env PYVISA_KEYSIGHT_VIRTUAL_INSTR --tries 5 --required -F unittest --name codecov-umbrella
    displayName: "Upload test coverage results"

  - script: |
      export PATH="$HOME/miniconda3/bin:$PATH"
      conda remove -n test_ --all --yes
    displayName: "Remove test environment"
    condition: always()
